paths:
  /api/products/:
    get:
      tags:
        - Products  
      summary: Get all products
      parameters:
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: limit
          schema:
            type: number
        - in: query
          name: sort
          schema:
            type: string
          description: \'asc\' , \'desc\' 
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "500":
          description: Server Error
          
  /api/products/{productId}:
    get:
        summary: Get a Product
        tags:
          - Products
        parameters:
          - name: productId
            in: path
            required: true
            schema:
              type: string
        responses:
          "200":
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products  
      summary: Create a product
      parameters:
          - name: productId
            in: path
            required: true
            schema:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
          "200":
            description: Product Created
            content:
             application/json:
              schema:
                $ref: '#/components/schemas/Product'
          "400":
            description: Invalid ID
          "404":
            description: Product Not found 
    put:
      tags:
        - Products  
      summary: Update a Product
      parameters:
          - name: productId
            in: path
            required: true
            schema:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
          "200":
            description: Product updated
            content:
             application/json:
              schema:
                $ref: '#/components/schemas/Product'
          "400":
            description: Invalid ID
          "404":
            description: Producto not found
            
    delete:
      summary: Delete a product
      tags:
        - Products 
      parameters:
          - name: productId
            in: path
            required: true
            schema:
              type: string
      responses:
          "200":
            description: Product deleted
          "404":
            description: Producto not found
  


components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: Id autogenerado de mongo
        code:
          type: string
          description: Código del producto.
        title:
          type: string
          description: Título del producto.
        description:
          type: string
          description: Descripción del producto.
        price:
          type: number
          description: Precio del producto.
        status:
          type: boolean
          description: Estado del producto.
          default: true
        stock:
          type: number
          description: Stock disponible del producto.
        category:
          type: string
          description: Categoría del producto.
        thumbnails:
          type: array
          description: Lista de URLs de las miniaturas del producto.
          items:
            type: string
      example:
        id: 64c06ee6e751fdc36d8aa519
        code: "Codigo-new-2"
        title: "producto 2"
        description: "Descripcion del producto nuevo"
        price: 200
        status: false
        stock: 40
        category: Talleres
        thumbnails: ["url.jpg","url-2.jpg"]
  requestBodies:
    getProduct:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'